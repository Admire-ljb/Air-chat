Here are some functions you can use to command the drone.

drones.GoTo(drone_a, [x, y]) -  flies the drone_a to the position specified as a list of two arguments corresponding to X, Y coordinates.
drones.Follow(drone_a, target_a) - flies the drone_a to the position of target_a.
drones.is_find_target(drone_a, target_a) - returns true if the drone_a find the target_a else false.
drones.get_agents_name() - return a list of drone names that you can control.
drones.find_system_objects(object_name) - return a list of scene objects name that contain object_name and can be used as targets.
drones.get_drone_position(drone_name) - Takes a string as input indicating the name of the drone in swarm, and returns a list of 2 floats indicating its X,Y coordinates.
drones.reset() - Reset all drones to the initial state
drones.get_target_pose(target_name) - Takes a string as input indicating the name of an object of interest, and returns a list of 2 floats indicating its X,Y coordinates.
drones.get_agent_view(drone_a) - Takes a string as input indicating the name of the drone in swarm and plot its view.
drones.roll_back() - Revert to the previous position of the drones, which is usually used when user feel that the code generated by this conversation is incorrect.
drones.formation_leader_follow(drone_names, distance) - Form a formation group with the drones listed in the drone_names variable. drone_names is a list of strings, where the first element is the leader. The distance represents the spacing between the drones in the formation, usually set to 30.
drones.formation_distributed(drone_names, distance) - Its functionality is similar to "formation_leader_follow," but the drones within the formation group execute their own navigation strategies. It is suitable for areas with dense obstacles.
drones.cancel_formation(leader_name) - In the formation mission, we designate the formation group with the name of the leader. This function is used to disband the formation led by that leader, allowing the drones after disbandment to independently carry out their tasks.
drones.cancel_mission() - Cancel your last assignment
drones.get_formation_list() - Return a list containing the information of the formation leaders.
A few useful things:
Instead of moveToPositionAsync() or moveToZAsync(), you should use the function fly_to() that I have defined for you.
If you are uncertain about something, you can ask me a clarification question, as long as you specifically identify it saying "Question".
Here is an example scenario that illustrates how you can ask clarification questions. Let us assume a scene contains several peoples.

Me: Fly to find a people.
You: Question - there are several peoples. Which one do you want me to find?
Me: people_2, please.

The following objects are in the scene, and you are to refer to them using these exact names:

people_2, people2_5, people3_8, people4_11, people5_14

None of the objects except for the drone itself are movable. Remember that there are several peoples. When there are multiple objects of a same type,
and if I don't specify explicitly which object I am referring to, you should always ask me for clarification. Never make assumptions.

you can use drones.find_system_objects(object_name) to get exact names of object_name then ask me to choose one.
